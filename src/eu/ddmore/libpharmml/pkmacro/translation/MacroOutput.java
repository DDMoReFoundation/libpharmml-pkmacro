package eu.ddmore.libpharmml.pkmacro.translation;

import java.util.List;

import eu.ddmore.libpharmml.dom.commontypes.DerivativeVariable;
import eu.ddmore.libpharmml.dom.commontypes.VariableDefinition;
import eu.ddmore.libpharmml.dom.modeldefn.ModelDefinition;
import eu.ddmore.libpharmml.dom.modeldefn.StructuralModel;

/**
 * Defines the output of a PharmML macro translation.
 * @author Florent Y.
 *
 */
public interface MacroOutput {
	
	/**
	 * Gets the structural model corresponding to the translated macros. This one does not contain any 
	 * macro but only equations as {@link VariableDefinition} and {@link DerivativeVariable}.
	 * @return The generated {@link StructuralModel} object. This one is transient, meaning that you
	 * need to map it to a {@link ModelDefinition} mapped instance in order to marshal it.
	 */
	public StructuralModel getStructuralModel();
	
	/**
	 * Gets the input data generated by the macro translation.
	 * @return A {@link List} of {@link Input} objects.
	 */
	public List<Input> getListOfInput();

}
