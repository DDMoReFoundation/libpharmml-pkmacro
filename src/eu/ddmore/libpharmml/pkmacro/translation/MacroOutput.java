/*******************************************************************************
 * Copyright (c) 2015 European Molecular Biology Laboratory,
 * Heidelberg, Germany.
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of
 * the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on 
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 * KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations 
 * under the License.
 *******************************************************************************/
package eu.ddmore.libpharmml.pkmacro.translation;

import java.util.List;

import eu.ddmore.libpharmml.dom.commontypes.DerivativeVariable;
import eu.ddmore.libpharmml.dom.commontypes.VariableDefinition;
import eu.ddmore.libpharmml.dom.modeldefn.ModelDefinition;
import eu.ddmore.libpharmml.dom.modeldefn.StructuralModel;

/**
 * Defines the output of a PharmML macro translation.
 */
public interface MacroOutput {
	
	/**
	 * Gets the structural model corresponding to the translated macros. This one does not contain any 
	 * macro but only equations as {@link VariableDefinition} and {@link DerivativeVariable}.
	 * @return The generated {@link StructuralModel} object. This one is transient, meaning that one
	 * needs to map it to a {@link ModelDefinition} mapped instance in order to marshal it.
	 */
	public StructuralModel getStructuralModel();
	
	/**
	 * Gets the input data generated by the macro translation.
	 * @return A {@link List} of {@link Input} objects.
	 */
	public List<Input> getListOfInput();

}
